/**
 * unknown
 * unknown
 *
 * OpenAPI spec version: last
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import ajax, { AjaxPromise } from '@ajax';
import * as models from '../model/models';

/* tslint:disable:no-unused-variable member-ordering object-literal-shorthand */

export type ParamsBodyauthLoginPost = models.AuthLoginBody;
export interface ParamssetmealSelectAllSetMealPost {
  // headerParams
  token: string; // token (Only:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMTU2MjU0ODk5NTg5MyJ9.l2KYz8TVLTm2IRmq0CZUqU7NWjf0aiMQ4iaKGm7zFso)
  // queryParams
  pageNo: string; // 
  token2: string; // 
  pageSize: string; // 
}
export type ParamsBodysetmealSelectAllSetMealPost = models.SetmealSelectAllSetMealBody;
export class DefaultApi {
  protected $basePath = ''.replace(/\/$/, '');

  public constructor(basePath?: string) {
    if (basePath !== undefined) {
      this.$basePath = basePath.replace(/\/$/, '');
    }
  }

  /**
   * 
   * @summary 登录获取token
   
   * @param body: ParamsBodyauthLoginPost
   */
  public authLoginPost = (
    
    data: ParamsBodyauthLoginPost
  ) : AjaxPromise<models.ERRORUNKNOWN>  => {
    const path = '/auth/login';
    const url = this.$basePath + path;
    const p: any = {};
    p.data = data;
    return ajax.ajax({
      method: 'POST',
      url,
      ...p
    }, path, this.$basePath);
  }
  /**
   * 
   * @summary 获取所有的套餐
   * @param params ParamssetmealSelectAllSetMealPost
   * @param body: ParamsBodysetmealSelectAllSetMealPost
   */
  public setmealSelectAllSetMealPost = (
    params: ParamssetmealSelectAllSetMealPost,
    data: ParamsBodysetmealSelectAllSetMealPost
  ) : AjaxPromise<models.ERRORUNKNOWN>  => {
    const path = '/setmeal/selectAllSetMeal';
    const url = this.$basePath + path;
    const p: any = {};
    p.query = {};
    if ('pageNo' in params) p.query.pageNo = params.pageNo;
    ajax.check(params.pageNo, 'pageNo');
    if ('token2' in params) p.query.token2 = params.token2;
    ajax.check(params.token2, 'token2');
    if ('pageSize' in params) p.query.pageSize = params.pageSize;
    ajax.check(params.pageSize, 'pageSize');
    p.data = data;
    return ajax.ajax({
      method: 'POST',
      url,
      ...p
    }, path, this.$basePath);
  }
}

export default new DefaultApi();